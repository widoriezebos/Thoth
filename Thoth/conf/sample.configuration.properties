#######
# Primary options below; these you will have to set to get things going
#######

# The absolute path to the folder that will contain pulled branches
workspacelocation=/path/to/your/thoth/workspace

# The branches to check out / pull from the Git repository. Comma separated
branches=Branch1,Branch2

# URL of the Git repository that contains the Documentation
git.repository=https://github.com/someuser/MyDocumentation.git

# Username of the Git user
git.username=yourgitusername

# Password of the Git user
git.password=yourgitpassword

# The default skin to use. This primarily used for the general index page. Must be a valid branch name
# as specified by the 'branches' property. If left blank then the first branch will be taken.
# Note that if there is no skin.properties defined for that branch; the builtin skin will be used.
skin.globalbranch=

#######
# PDF related options. If you have installed Prince (see http://www.princexml.com) then you do not have
# to change the command. The localhost spec is the URL where prince is able to find the Thoth server
#######

# The URL for the localhost. Will be used for PDF conversion based on HTML
pdf.localhost=http://localhost:8080/

# The process command to convert a URL to a PDF
pdf.command=/usr/local/bin/prince ${url} -o ${output} --media=print --page-size=A4 --page-margin=20mm 

#######
# More options below; but you might not necessarily have to change them
#######

# Pretty prent JSON responses. You might want to set this to false in a production environment; small performance benefit
json.prettyprint=true

# The default skin to use. If not set; it will use the builtin skin 
# which is classpath:net/riezebos/thoth/skins/builtinskin/skin.properties
# Note that any skin can come from the classpath as long as the package remains within net/riezebos/thoth/skins/
# If it is not prefixed with 'classpath:' it must be a path (including the branch name) to the the git file
# structure. 
skin.default=

# Type of version control. Currently only GIT is supported
versioncontrol.type=git

# The maximum number of revisions to collect / display for latest commits per file
versioncontrol.maxfilerevisions=10

# The maximum number of revisions to collect / display for latest commits per file
versioncontrol.maxbranchrevisions=25

# Automatic refresh interval (seconds). Minimum is 30 seconds. Set to 0 for disable
versioncontrol.autorefresh=60

# The maximum time in ms that a Markdown parse can last
parsetimeout=4000

# The extensions of the files that will be recognized as a 'Book' and therefore shown by the auto generated index
books=marked,book,index

# The extensions of file to include in the search index (comma separated; no '.')
index.extensions=md,book,marked,txt

# Append any link / include error messages at the bottom of the document
markdown.appenderrors=true

#######
# MARKDOWN OPTIONS BELOW
# See https://github.com/sirthias/pegdown for a full description
#######

#Pretty ellipses, dashes and apostrophes.
markdown.option.SMARTS=on

#Pretty single and double quotes.
markdown.option.QUOTES=on

#PHP Markdown Extra style abbreviations.
#See http://michelf.com/projects/php-markdown/extra/#abbr
markdown.option.ABBREVIATIONS=on

#Enables the parsing of hard wraps as HTML linebreaks. Similar to what github does.
#See http://github.github.com/github-flavored-markdown
markdown.option.HARDWRAPS=on

#Enables plain autolinks the way github flavoured markdown implements them.
#With this extension enabled pegdown will intelligently recognize URLs and email addresses
#without any further delimiters and mark them as the respective link type.
#See http://github.github.com/github-flavored-markdown
markdown.option.AUTOLINKS=off

#Table support similar to what Multimarkdown offers.
#See http://fletcherpenney.net/multimarkdown/users_guide/
markdown.option.TABLES=on

#PHP Markdown Extra style definition lists.
#Additionally supports the small extension proposed in the article referenced below.
#See http://michelf.com/projects/php-markdown/extra/#def-list
#See http://www.justatheory.com/computers/markup/modest-markdown-proposal.html
markdown.option.DEFINITIONS=on

#PHP Markdown Extra style fenced code blocks.
#See http://michelf.com/projects/php-markdown/extra/#fenced-code-blocks
markdown.option.FENCED_CODE_BLOCKS=on

#Support [[Wiki-style links]]. URL rendering is performed by the active {@link LinkRenderer}.
#See http://github.github.com/github-flavored-markdown
markdown.option.WIKILINKS=on

#Support ~~strikethroughs~~ as supported in Pandoc and Github.
markdown.option.STRIKETHROUGH=on

#Enables anchor links in headers.
markdown.option.ANCHORLINKS=off

#Suppresses HTML blocks. They will be accepted in the input but not be contained in the output.
markdown.option.SUPPRESS_HTML_BLOCKS=off

#Suppresses inline HTML tags. They will be accepted in the input but not be contained in the output.
markdown.option.SUPPRESS_INLINE_HTML=off

#Requires a space char after Atx # header prefixes, so that #dasdsdaf is not a header.
markdown.option.ATXHEADERSPACE=off

#Force List and Definition Paragraph wrapping if it includes more than just a single paragraph
markdown.option.FORCELISTITEMPARA=off

#Force List and Definition Paragraph wrapping if it includes more than just a single paragraph
markdown.option.RELAXEDHRULES=off

#GitHub style task list items: - [ ] and - [x]
markdown.option.TASKLISTITEMS=on

#Generate anchor links for headers using complete contents of the header
markdown.option.EXTANCHORLINKS=off
