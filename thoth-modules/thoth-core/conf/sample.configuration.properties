#######
# Primary options below; these you will have to set to get things going
#######

# The absolute path to the folder that will contain pulled contexts
workspacelocation=/path/to/your/thoth/workspace


#######
# Repository and Context definitions. These specify where to get the content from
# Can be as many repositories as you like. Make sure you number them sequentially and leave
# no gaps (parsing will stop at the first entry that has it's name not set)
#######

# Name (identifier for use by Thoth) of the repository
repository.1.name=Repository1

# Type of version control. Currently only GIT and FS (simple filesystem) are supported
repository.1.type=git

# Location (URL or folder) of the repository that contains the Documentation
repository.1.location=https://github.com/someuser/MyDocumentation.git

# Username of the repository user
repository.1.username=yourusername

# Password of the repository user
repository.1.password=yourpassword

# The contexts to check out / pull from the repository.

#The name of the context. Will be used as name for the local repository folder. Must be unique
context.1.name=Context1

#The name of the branch to check out
context.1.repository=Repository1

#The name of the branch to check out. Must be an existing branch in the associated repository
context.1.branch=Branch1


#######
# Skinning related properties
#######

# The name of the default skin to use. If not set; it will use the builtin skin named 'Builtin' 
# Note that any skin can come from the classpath as long as the package remains within net/riezebos/thoth/skins/
skin.default=SimpleSkin

# The skin to use for the main index page (hence not within a context). Must be a valid context name
# as specified by the 'context.name' property. If left blank then the default skin is used.
skin.mainindexcontext=

# The URL for the localhost. Will be used for custom renderer processing
localhost=http://localhost:8080/


#######
# Define any custom renderers below for for additional output formats. Make sure you number them sequentially and leave
# no gaps (parsing will stop at the first custom renderer that has it's extension not set.
# You can have any number of custom processors; just keep on numbering them.
#
# Note that you can also override the default html and raw renderers. Their extensions are 'raw' and 'html'
#######

renderer.1.extension=pdf 
renderer.1.contenttype=application/pdf 
renderer.1.command=/usr/local/bin/prince ${url}?suppresserrors=true -o ${output} --javascript --media=print --page-size=A4 --page-margin=20mm 

renderer.2.extension= 
renderer.2.contenttype= 
renderer.2.command= 


#######
# Embedded server options. Not applicable when deployed as a WAR
#######

# The port to have the (embedded) server listen to. Default is 8080
embedded.port=8080

# The idle timeout for connections. Note: in specified in seconds
embedded.idletimeout=30

# Hostname of the server
embedded.servername=localhost


#######
# Context index (page) options
#######

# The following comma separated classifications will be available to the context index template 
# (grouping of documents by classification) The folder classification is built in; and is just listed below for clarity
# In the template (or json) the classification names are available under "classification_" + <the name specified below>
context.classifications=category,audience,folder


#######
# Search options
#######

# The number of search results per page; default is 25
search.maxresults=25


#######
# More options below; but you might not necessarily have to change them
#######

# Default date format mask. Note that the month is MM and the minutes are mm. HH is 24hr and hh 12hr
formatmask=dd-MM-yyyy HH:mm:ss

# Pretty prent JSON responses. You might want to set this to false in a production environment; small performance benefit
json.prettyprint=true

# The maximum number of revisions to collect / display for latest commits per file (Meta command)
versioncontrol.maxfilerevisions=10

# The maximum number of revisions to collect / display for latest commits for the entire context (Revisions command)
versioncontrol.maxcontextrevisions=25

# Automatic refresh interval (seconds). Minimum is 30 seconds. Set to 0 for disable
versioncontrol.autorefresh=60

# The maximum time in ms that a Markdown parse can last
parsetimeout=4000

# The extensions of the files that will be recognized as a 'Document' and therefore can be rendered to html, pdf etc
documents=marked,book,index,md

# The extensions of the files that will be recognized as a 'Book' and therefore shown by the auto generated index
books=marked,book,index

# The extensions of file to include in the search index (comma separated; no '.')
index.extensions=md,book,marked,txt

# Append any link / include error messages at the bottom of the document
markdown.appenderrors=true

# Auto number headings up to the specified level. Default is 3, set to 0 to disable 
markdown.maxheadernumberlevel=3

#######
# MARKDOWN OPTIONS BELOW
# See https://github.com/sirthias/pegdown for a full description
#######

#Pretty ellipses, dashes and apostrophes.
markdown.option.SMARTS=on

#Pretty single and double quotes.
markdown.option.QUOTES=on

#PHP Markdown Extra style abbreviations.
#See http://michelf.com/projects/php-markdown/extra/#abbr
markdown.option.ABBREVIATIONS=on

#Enables the parsing of hard wraps as HTML linebreaks. Similar to what github does.
#See http://github.github.com/github-flavored-markdown
markdown.option.HARDWRAPS=on

#Enables plain autolinks the way github flavoured markdown implements them.
#With this extension enabled pegdown will intelligently recognize URLs and email addresses
#without any further delimiters and mark them as the respective link type.
#See http://github.github.com/github-flavored-markdown
markdown.option.AUTOLINKS=off

#Table support similar to what Multimarkdown offers.
#See http://fletcherpenney.net/multimarkdown/users_guide/
markdown.option.TABLES=on

#PHP Markdown Extra style definition lists.
#Additionally supports the small extension proposed in the article referenced below.
#See http://michelf.com/projects/php-markdown/extra/#def-list
#See http://www.justatheory.com/computers/markup/modest-markdown-proposal.html
markdown.option.DEFINITIONS=on

#PHP Markdown Extra style fenced code blocks.
#See http://michelf.com/projects/php-markdown/extra/#fenced-code-blocks
markdown.option.FENCED_CODE_BLOCKS=on

#Support [[Wiki-style links]]. URL rendering is performed by the active {@link LinkRenderer}.
#See http://github.github.com/github-flavored-markdown
markdown.option.WIKILINKS=on

#Support ~~strikethroughs~~ as supported in Pandoc and Github.
markdown.option.STRIKETHROUGH=on

#Enables anchor links in headers.
markdown.option.ANCHORLINKS=off

#Suppresses HTML blocks. They will be accepted in the input but not be contained in the output.
markdown.option.SUPPRESS_HTML_BLOCKS=off

#Suppresses inline HTML tags. They will be accepted in the input but not be contained in the output.
markdown.option.SUPPRESS_INLINE_HTML=off

#Requires a space char after Atx # header prefixes, so that #dasdsdaf is not a header.
markdown.option.ATXHEADERSPACE=off

#Force List and Definition Paragraph wrapping if it includes more than just a single paragraph
markdown.option.FORCELISTITEMPARA=off

#Force List and Definition Paragraph wrapping if it includes more than just a single paragraph
markdown.option.RELAXEDHRULES=off

#GitHub style task list items: - [ ] and - [x]
markdown.option.TASKLISTITEMS=on

#Generate anchor links for headers using complete contents of the header
markdown.option.EXTANCHORLINKS=off
